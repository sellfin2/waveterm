@import "@/common/icons/icons.less";

// Theming values
#main .screen-tabs .screen-tab {
    font: var(--base-font);
    font-size: var(--screentabs-font-size);
    line-height: var(--screentabs-line-height);

    &.is-active {
        .background {
            border-top: 1px solid var(--tab-color);
            background-color: var(--tab-color);
        }
    }

    svg.svg-icon-inner path {
        fill: var(--tab-color);
    }

    .tabicon i {
        color: var(--tab-color);
    }

    &.color-green,
    &.color-default {
        --tab-color: var(--tab-green);
    }

    &.color-orange {
        --tab-color: var(--tab-orange);
    }

    &.color-red {
        --tab-color: var(--tab-red);
    }

    &.color-yellow {
        --tab-color: var(--tab-yellow);
    }

    &.color-blue {
        --tab-color: var(--tab-blue);
    }

    &.color-mint {
        --tab-color: var(--tab-mint);
    }

    &.color-cyan {
        --tab-color: var(--tab-cyan);
    }

    &.color-white {
        --tab-color: var(--tab-white);
    }

    &.color-violet {
        --tab-color: var(--tab-violet);
    }

    &.color-pink {
        --tab-color: var(--tab-pink);
    }
}

// Layout values
#main .screen-tabs-container {
    display: flex;
    position: relative;
    overflow: hidden;
    height: var(--screentabs-height);

    &:hover {
        z-index: 200;
    }

    &:hover .cmd-hints {
        display: flex;
    }

    .cmd-hints {
        position: absolute;
        bottom: -18px;
        left: 0px;
        display: flex;
    }

    .screen-tabs-container-inner {
        overflow-x: scroll;
        overflow-y: hidden;
    }

    .screen-tabs {
        display: flex;
        flex-direction: row;
        height: 100%;
        .screen-tab {
            display: flex;
            flex-direction: row;
            position: relative;
            border-top: 2px solid transparent;
            background: var(--app-bg-color);

            .background {
                // This applies a transparency mask to the background color, as set above, so that it will blend with whatever the theme's background color is.
                z-index: 1;
                width: var(--screen-tab-width);
                mask-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0) 100%);
            }

            &.is-active {
                opacity: 1;
                font-weight: var(--screentabs-selected-font-weight);
                border-top: 2px solid var(--tab-color);

                .screen-tab-inner {
                    cursor: default;
                }
            }

            &:not(.is-active) .status-indicator {
                .status-indicator-visible;
            }

            &.is-active:not(:hover) .status-indicator {
                .status-indicator-visible;
            }

            &.is-active:hover .actions {
                .positional-icon-visible;

                &:hover {
                    background-color: var(--app-selected-mask-color);
                    border-radius: 4px;
                }
            }

            &.is-archived {
                .fa.fa-archive {
                    margin-right: 4px;
                }
            }

            .screen-tab-inner {
                display: flex;
                flex-direction: row;
                position: absolute;
                z-index: 2;
                min-width: var(--screen-tab-width);
                max-width: var(--screen-tab-width);
                align-items: center;
                cursor: pointer;
                padding: 8px 8px 4px 8px; // extra 4px of tab padding to account for horizontal scrollbar (to make tab text look centered)
                .front-icon {
                    .positional-icon-visible;
                }

                .tab-name {
                    flex-grow: 1;
                }

                // Only one of these will be visible at a time
                .end-icons {
                    // This adjusts the position of the icon to account for the default 8px margin on the parent. We want the positional calculations for this icon to assume it is flush with the edge of the screen tab.
                    margin: 0 -5px 0 0;
                    line-height: normal;
                    .tab-index {
                        font-size: 12.5px;
                    }
                }
            }

            .vertical-line {
                border-left: 1px solid var(--app-border-color);
                margin: 10px 0 8px 0;
            }
        }
    }

    .new-screen {
        flex-shrink: 0;
        cursor: pointer;
        display: flex;
        align-items: center;
        height: 100%;

        .icon {
            height: 2rem;
            border-radius: 50%;
            padding: 0.4em;
            vertical-align: middle;
        }
    }

    .tabs-end-spacer {
        flex-grow: 1;
        min-width: 30px;
        -webkit-app-region: drag;
        height: 100%;
    }
}

// This ensures the tab bar does not collide with the floating logo. The floating logo sits above the sidebar when it is not collapsed, so no additional margin is needed in that case.
// More margin is given on macOS to account for the traffic light buttons
#main.platform-darwin.mainsidebar-collapsed .screen-tabs-container {
    margin-left: var(--floating-logo-width-darwin);
}

#main:not(.platform-darwin).mainsidebar-collapsed .screen-tabs-container {
    margin-left: var(--floating-logo-width);
}

// This ensures the tab bar does not collide with the right sidebar triggers.
#main.platform-darwin.rightsidebar-collapsed .screen-tabs-container {
    margin-right: var(--floating-right-sidebar-triggers-width-darwin);
}

#main:not(.platform-darwin).rightsidebar-collapsed .screen-tabs-container {
    margin-left: var(--floating-right-sidebar-triggers-width);
}
